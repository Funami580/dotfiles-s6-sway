# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term wezterm start --always-new-process
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
#
set $menu j4-dmenu-desktop --no-generic --wrapper="swaymsg exec" --dmenu "bemenu -i -p '' --line-height=26 --ch=17 --cw=2 --hp 10 --nf=#bbbbbb --nb=#222222 --af=#bbbbbb --ab=#222222 --fb=#222222 --hf=#eeeeee --hb=#005577"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/night.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
#
# Remote workspaces:
#
    set $remote_keyboard 0:0:virtual_keyboard
    # Switch to workspace
    bindsym --input-device=$remote_keyboard $mod+1 workspace r1
    bindsym --input-device=$remote_keyboard $mod+2 workspace r2
    bindsym --input-device=$remote_keyboard $mod+3 workspace r3
    bindsym --input-device=$remote_keyboard $mod+4 workspace r4
    bindsym --input-device=$remote_keyboard $mod+5 workspace r5
    bindsym --input-device=$remote_keyboard $mod+6 workspace r6
    bindsym --input-device=$remote_keyboard $mod+7 workspace r7
    bindsym --input-device=$remote_keyboard $mod+8 workspace r8
    bindsym --input-device=$remote_keyboard $mod+9 workspace r9
    bindsym --input-device=$remote_keyboard $mod+0 workspace r10
    # Move focused container to workspace
    bindsym --input-device=$remote_keyboard $mod+Shift+1 move container to workspace r1
    bindsym --input-device=$remote_keyboard $mod+Shift+2 move container to workspace r2
    bindsym --input-device=$remote_keyboard $mod+Shift+3 move container to workspace r3
    bindsym --input-device=$remote_keyboard $mod+Shift+4 move container to workspace r4
    bindsym --input-device=$remote_keyboard $mod+Shift+5 move container to workspace r5
    bindsym --input-device=$remote_keyboard $mod+Shift+6 move container to workspace r6
    bindsym --input-device=$remote_keyboard $mod+Shift+7 move container to workspace r7
    bindsym --input-device=$remote_keyboard $mod+Shift+8 move container to workspace r8
    bindsym --input-device=$remote_keyboard $mod+Shift+9 move container to workspace r9
    bindsym --input-device=$remote_keyboard $mod+Shift+0 move container to workspace r10
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Custom
for_window [app_id="librewolf" title="About LibreWolf"] floating enable
for_window [app_id="librewolf" title="Picture-in-Picture"] floating enable, resize set 800 450
for_window [app_id="librewolf" title="Extension: \(Tree Style Tab\) - Close tabs\?.*"] floating enable
for_window [app_id="thunderbird" title="Ãœber Mozilla Thunderbird"] floating enable
for_window [app_id="org.kde.dolphin" title="Kopiervorgang.*"] floating enable
for_window [class="jetbrains-idea" title="win0"] floating enable

input * xkb_layout "de"
input * xkb_numlock enable

exec swaymsg layout tabbed
exec ~/.config/sway/start_user_services.sh
exec ~/.config/sway/mute_microphone.sh
exec sleep 0.5 && ~/.config/waybar/gamma.sh start

# Disable scrolling through tabs
bindsym button4 nop
bindsym button5 nop
bindsym button6 nop
bindsym button7 nop

# requires: playerctl, mpv-mpris
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+m exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+Shift+m exec ~/.config/sway/mute_window.sh

bindsym Print exec grim -g "$(slurp)" - | tee ~/Bilder/Screenshots/$(date +'%Y-%m-%d_%H-%M-%S.png') | wl-copy --type image/png
bindsym Shift+Print exec grim - | tee ~/Bilder/Screenshots/$(date +'%Y-%m-%d_%H-%M-%S.png') | wl-copy --type image/png
bindsym Control+Print exec grim -g "$(slurp)" - | swappy -f -
bindsym Control+Shift+Print exec grim - | swappy -f -

bindsym $mod+n split none
bindsym $mod+t sticky toggle
bindsym $mod+Control+Shift+q exec swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused==true).pid' | xargs kill -9
bindsym $mod+Mod1+l exec swaylock -fel -s fill -i /usr/share/backgrounds/sway/plasma_5_11.png

bindsym $mod+Mod1+f exec librewolf
bindsym $mod+Mod1+Control+f exec librewolf --private-window https://duckduckgo.com/
bindsym $mod+Mod1+c exec chromium --ozone-platform=wayland
bindsym $mod+Mod1+Control+c exec chromium --incognito --ozone-platform=wayland
bindsym $mod+Mod1+h exec cliphist list | dmenu | cliphist decode | wl-copy
bindsym $mod+Mod1+t exec betterbird
bindsym $mod+Mod1+d exec dolphin
bindsym $mod+Mod1+k exec kate
bindsym $mod+Mod1+v exec mpv "$(wl-paste -n)"
bindsym $mod+Mod1+Return exec $term -- python3
bindsym $mod+Control+Return exec $term -- fend
